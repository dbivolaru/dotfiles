#!/usr/bin/env python3

import sys
from pathlib import Path
import os
from subprocess import check_output
from functools import partial

sys.path.insert(0, str(Path.home() / '.config' / 'kitty'))
from kitty_common import (
    ssh_help, kitty_help, kitty_alt_help, kitty_ctrl_help, cyan, white, rst, mc_print
)

sh_raw = partial(check_output, shell=True, encoding='utf-8')
sh = lambda cmd: sh_raw(cmd).rstrip()


# If we have the output piped then stdout (like in shutil) will not work
cols, rows = os.get_terminal_size(sys.__stdin__.fileno())

print(f'{sh("kitty --version")} {cols}x{rows}', flush=True)
print('\n' * (rows - 10), end='', flush=True)

mc_print(ssh_help, title='SSH Functions (Ctrl)', cols=cols)

mc_print(kitty_ctrl_help, title='Additional Function Keys (Ctrl)', cols=cols)

mc_print(kitty_alt_help, title='Terminal Functions (Ctrl + Shift + Alt)', cols=cols)

mc_print(kitty_help, title='Terminal Functions (Ctrl + Shift)', cols=cols)
